### scouter java agent configuration sample
obj_name=dev_jsms
net_collector_ip=10.50.106.137
net_collector_udp_port=7040
net_collector_tcp_port=7040

### if use proxy, get ip from http header
trace_http_client_ip_header_key=X-Forwarded-For

## 서비스 연계 추적으로 HTTP로 요청하는 서비스 간 연결 추적이 활성화
### trace relate service (default : false)
trace_interservice_enabled=true

#Activating interaction counter (topology) (default : false)
counter_interaction_enabled=true

# use @RequestMapping value as service name on a spring REST web appplicaiton.
# (default : true)
_hook_spring_rest_enabled=false


#Stack profile in occurrence of sql error
profile_fullstack_hooked_exception_enabled=true


#### non-http 서비스 추척
# 서비스가 시작되는 메소드를 hook_service_patterns에 등록
# 자바어플리케이션 메소드 후킹하고 싶은경우 사용
#hook_service_patterns=

#_trace_auto_service_enabled=true
#_trace_auto_service_backstack_enabled=true

### Method profile 
#hook_method_patterns=

### method profiling은 public method에만 작동합니다.
### 다른 접근 제한자에 대한 profiling을 허용하려면 다음 옵션을 사용
#hook_method_access_public_enabled=true
#hook_method_access_private_enabled=false
#hook_method_access_protected_enabled=false
#hook_method_access_none_enabled=false
#hook_method_ignore_prefixes=get,set


### xlog discard 옵션을 사용하면 TPS등에 반영되지도 않습니다. 보통 health check 요청등을 무시하기 위해 사용됩니다.
#xlog_discard_service_patterns= 
#error 발생시에는 xlog에 기록한다. 
#xlog_discard_service_show_error=true



#Exception handler method의 pattern을 지정합니다. 이 메소드로 전달되는 Exception class의 정보로 error 정보를 profiling 합니다.
#hook_exception_handler_method_patterns=

### ignore under response time 300ms
#xlog_lower_bound_time_ms=300


### http header info
#profile_http_parameter_enabled=true
#profile_http_header_enabled=true

### Method profile 
#hook_method_patterns=sample.mybiz.*Biz.*,sample.service.*Service.*
#trace_http_client_ip_header_key=X-Forwarded-For
#profile_spring_controller_method_parameter_enabled=false
#hook_exception_class_patterns=my.exception.TypedException
#profile_fullstack_hooked_exception_enabled=true
#hook_exception_handler_method_patterns=my.AbstractAPIController.fallbackHandler,my.ApiExceptionLoggingFilter.handleNotFoundErrorResponse
#hook_exception_hanlder_exclude_class_patterns=exception.BizException

## db 쿼리 보기 위한 설정
### Method set for preparestatement hooking
#hook_jdbc_pstmt_classes=org.mariadb.jdbc.BasePrepareStatement 
### Method set for statement hooking
#hook_jdbc_stmt_classes=org.mariadb.jdbc.MariaDbStatement

## jdbc leak profile 설정(default : true)
## ibatis 와 같은 framework 을 사용하는 경우 hook_connection_open_patterns 을 설정
## format : hook_connection_open_patterns=org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection
#profile_connection_open_enabled=true

### DBConnection Wrapping 대상 Method Set
#hook_jdbc_wrapping_driver_patterns=
